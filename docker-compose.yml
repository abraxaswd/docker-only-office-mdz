version: '3.7'

services:
  onlyoffice-documentserver:
    container_name: onlyoffice-document-server
    image: onlyoffice/documentserver:latest
    depends_on:
      - onlyoffice-postgresql
      - onlyoffice-rabbitmq
    environment:
      - DB_TYPE=postgres
      - DB_HOST=onlyoffice-postgresql
      - DB_PORT=5432
      - DB_NAME=onlyoffice
      - DB_USER=onlyoffice
      - AMQP_URI=amqp://guest:guest@onlyoffice-rabbitmq
      # Uncomment strings below to enable the JSON Web Token validation.
      #- JWT_ENABLED=true
      #- JWT_SECRET=secret
      #- JWT_HEADER=Authorization
      #- JWT_IN_BODY=true

    stdin_open: true
    restart: always
    stop_grace_period: 60s
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.onlyoffice.rule=Host(`onlyoffice.wiesan.de`)"
      - "traefik.http.routers.onlyoffice.entrypoints=http"
      #- "traefik.http.routers.onlyoffice.tls.certresolver=http"
      #- "traefik.http.routers.onlyoffice.tls=true"
      - "traefik.http.routers.onlyoffice.middlewares=onlyoffice-headers"
      - "traefik.http.services.onlyoffice.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"

      ## Middleware definition
      # Headers for onlyoffice, https://github.com/ONLYOFFICE/onlyoffice-nextcloud/issues/151
      - "traefik.http.middlewares.onlyoffice-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.onlyoffice-headers.headers.accesscontrolalloworiginlist=*"
    networks:
      - proxy
      - onlyoffice
    volumes:
       - /opt/containers/general_services/onlyoffice/data:/var/www/onlyoffice/Data
       - /opt/containers/general_services/onlyoffice/log:/var/log/onlyoffice
       - /opt/containers/general_services/onlyoffice/cache:/var/lib/onlyoffice/documentserver/App_Data/cache/files
       
  onlyoffice-rabbitmq:
    container_name: onlyoffice-rabbitmq
    image: rabbitmq
    restart: always
    expose:
      - '5672'
    networks:
      - onlyoffice
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  onlyoffice-postgresql:
    container_name: onlyoffice-postgresql
    image: postgres:9.5
    environment:
      - POSTGRES_DB=onlyoffice
      - POSTGRES_USER=onlyoffice
      - POSTGRES_HOST_AUTH_METHOD=trust
    restart: always
    networks:
      - onlyoffice
    volumes:
      - /opt/containers/general_services/onlyoffice/postgresql_data:/var/lib/postgresql
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

networks:
  proxy:
    external: true
  onlyoffice:
    external: true
  
